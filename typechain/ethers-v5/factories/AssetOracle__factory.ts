/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AssetOracle, AssetOracleInterface } from "../AssetOracle";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "idx",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOracle",
        type: "address",
      },
    ],
    name: "AssetOracleUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_principle",
        type: "address",
      },
    ],
    name: "assetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "asset",
        type: "address",
      },
    ],
    name: "getAssetPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "priceOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_oracle",
        type: "address[]",
      },
    ],
    name: "setAssetOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50338061007e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825560408051928352602083019190915280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a150610a00806100e66000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fe578063a817303814610106578063b3596f07146101a9578063b883b058146101e157610088565b80631627540c1461008d57806345a6de8f146100b557806353a47bb7146100ee57806379ba5097146100f6575b600080fd5b6100b3600480360360208110156100a357600080fd5b50356001600160a01b0316610207565b005b6100d2600480360360208110156100cb57600080fd5b50356102b1565b604080516001600160a01b039092168252519081900360200190f35b6100d26102db565b6100b36102ea565b6100d26103b3565b6100b36004803603602081101561011c57600080fd5b81019060208101813564010000000081111561013757600080fd5b82018360208201111561014957600080fd5b8035906020019184602083028401116401000000008311171561016b57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295506103c2945050505050565b6101cf600480360360208110156101bf57600080fd5b50356001600160a01b03166104c5565b60408051918252519081900360200190f35b6101cf600480360360208110156101f757600080fd5b50356001600160a01b03166105f6565b6000546001600160a01b031633146102505760405162461bcd60e51b815260040180806020018281038252602f81526020018061097b602f913960400191505060405180910390fd5b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b600281815481106102c157600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031681565b6001546001600160a01b031633146103335760405162461bcd60e51b81526004018080602001828103825260358152602001806109466035913960400191505060405180910390fd5b600054600154604080516001600160a01b03938416815292909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031681565b6000546001600160a01b0316331461040b5760405162461bcd60e51b815260040180806020018281038252602f81526020018061097b602f913960400191505060405180910390fd5b60005b81518110156104c157600282828151811061042557fe5b602090810291909101810151825460018101845560009384529190922001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03909216919091179055815182908290811061047b57fe5b60200260200101516001600160a01b0316817f35ffc63943ebc4c1151dd9af60228b02dc785665bac0adcf8fc7b1e56afb1d4760405160405180910390a360010161040e565b5050565b6000805b6002548110156105a3576000600282815481106104e257fe5b6000918252602080832090910154604080517f3ddac9530000000000000000000000000000000000000000000000000000000081526001600160a01b038981166004830152620f4240602483015291519190921694508492633ddac9539260448082019391829003018186803b15801561055b57600080fd5b505afa15801561056f573d6000803e3d6000fd5b505050506040513d602081101561058557600080fd5b5051905080156105995792506105f1915050565b50506001016104c9565b506040805162461bcd60e51b815260206004820152601660248201527f43414e4e4f542047455420415353455420505249434500000000000000000000604482015290519081900360640190fd5b919050565b600080826001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561063257600080fd5b505afa158015610646573d6000803e3d6000fd5b505050506040513d602081101561065c57600080fd5b5051604080517f5909c0d500000000000000000000000000000000000000000000000000000000815290519192506000916001600160a01b03861691635909c0d5916004808301926020929190829003018186803b1580156106bd57600080fd5b505afa1580156106d1573d6000803e3d6000fd5b505050506040513d60208110156106e757600080fd5b5051604080517f5a3d549300000000000000000000000000000000000000000000000000000000815290519192506000916001600160a01b03871691635a3d5493916004808301926020929190829003018186803b15801561074857600080fd5b505afa15801561075c573d6000803e3d6000fd5b505050506040513d602081101561077257600080fd5b5051905061079c670de0b6b3a76400006107968561079086866107a5565b90610808565b9061084a565b95945050505050565b6000828201838110156107ff576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b90505b92915050565b60006107ff83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506108a3565b60008261085957506000610802565b8282028284828161086657fe5b04146107ff5760405162461bcd60e51b81526004018080602001828103825260218152602001806109aa6021913960400191505060405180910390fd5b6000818361092f5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108f45781810151838201526020016108dc565b50505050905090810190601f1680156109215780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161093b57fe5b049594505050505056fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a2646970667358221220759b90a0f0929704ab2337f5edb19bcdc5090a878de31daff8255d9f8159118f64736f6c63430007050033";

export class AssetOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssetOracle> {
    return super.deploy(overrides || {}) as Promise<AssetOracle>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssetOracle {
    return super.attach(address) as AssetOracle;
  }
  connect(signer: Signer): AssetOracle__factory {
    return super.connect(signer) as AssetOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssetOracleInterface {
    return new utils.Interface(_abi) as AssetOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssetOracle {
    return new Contract(address, _abi, signerOrProvider) as AssetOracle;
  }
}
