/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ICAMP, ICAMPInterface } from "../ICAMP";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "b_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "b_amount",
        type: "uint256",
      },
    ],
    name: "Bank_burn_from",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "m_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "m_amount",
        type: "uint256",
      },
    ],
    name: "Bank_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "m_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "m_amount",
        type: "uint256",
      },
    ],
    name: "Bond_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "m_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "m_amount",
        type: "uint256",
      },
    ],
    name: "Staking_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICAMP__factory {
  static readonly abi = _abi;
  static createInterface(): ICAMPInterface {
    return new utils.Interface(_abi) as ICAMPInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ICAMP {
    return new Contract(address, _abi, signerOrProvider) as ICAMP;
  }
}
