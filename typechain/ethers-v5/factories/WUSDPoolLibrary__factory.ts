/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  WUSDPoolLibrary,
  WUSDPoolLibraryInterface,
} from "../WUSDPoolLibrary";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "col_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "collateral_amount_d18",
        type: "uint256",
      },
    ],
    name: "calcMint1t1WUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "WMF_price_usd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "WMF_amount_d18",
        type: "uint256",
      },
    ],
    name: "calcMintAlgorithmicWUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "collateral_amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "col_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "global_collat_value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "WUSD_total_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "global_collateral_ratio",
        type: "uint256",
      },
    ],
    name: "calcRecollateralizeWUSDInner",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "col_price_usd",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "WUSD_amount",
        type: "uint256",
      },
    ],
    name: "calcRedeem1t1WUSD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "total_supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "global_collateral_ratio",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "global_collat_value",
        type: "uint256",
      },
    ],
    name: "recollateralizeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x610476610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100715760003560e01c8063516e90361161005a578063516e9036146100b157806356697238146100d45780635d1159201461012257610071565b80630ff24ec1146100765780634e69d915146100b1575b600080fd5b61009f6004803603606081101561008c57600080fd5b5080359060208101359060400135610145565b60408051918252519081900360200190f35b61009f600480360360408110156100c757600080fd5b5080359060200135610174565b610109600480360360a08110156100ea57600080fd5b5080359060208101359060408101359060608101359060800135610190565b6040805192835260208301919091528051918290030190f35b61009f6004803603604081101561013857600080fd5b5080359060200135610218565b60008061015f620f42406101598787610227565b90610280565b905061016b81846102a5565b95945050505050565b6000610187620f42406101598486610227565b90505b92915050565b600080806101a5620f42406101598a8a610227565b905060006101ba8661015989620f4240610227565b905060006101e2620f42406101596101d28a86610227565b6101dc8a8c610227565b906102a5565b905060008184116101f45750826101f7565b50805b6102088a61015983620f4240610227565b9b909a5098505050505050505050565b60006101878361015984620f42405b6000826102365750600061018a565b8282028284828161024357fe5b04146101875760405162461bcd60e51b815260040180806020018281038252602c8152602001806103c7602c913960400191505060405180910390fd5b600061018783836040518060600160405280602581526020016103f3602591396102ca565b600061018783836040518060600160405280602981526020016104186029913961036c565b600081836103565760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561031b578181015183820152602001610303565b50505050905090810190601f1680156103485780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161036257fe5b0495945050505050565b600081848411156103be5760405162461bcd60e51b815260206004820181815283516024840152835190928392604490910191908501908083836000831561031b578181015183820152602001610303565b50505090039056fe536166654d61746855706772616465536166653a206d756c7469706c69636174696f6e206f766572666c6f77536166654d61746855706772616465536166653a206469766973696f6e206279207a65726f536166654d61746855706772616465536166653a207375627472616374696f6e206f766572666c6f77a2646970667358221220648cb1537f5404408a75e499ffe62e5cca3ad42ac50ed8b577fed91421f1162c64736f6c63430007050033";

export class WUSDPoolLibrary__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<WUSDPoolLibrary> {
    return super.deploy(overrides || {}) as Promise<WUSDPoolLibrary>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): WUSDPoolLibrary {
    return super.attach(address) as WUSDPoolLibrary;
  }
  connect(signer: Signer): WUSDPoolLibrary__factory {
    return super.connect(signer) as WUSDPoolLibrary__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WUSDPoolLibraryInterface {
    return new utils.Interface(_abi) as WUSDPoolLibraryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WUSDPoolLibrary {
    return new Contract(address, _abi, signerOrProvider) as WUSDPoolLibrary;
  }
}
