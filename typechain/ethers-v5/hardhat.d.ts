/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Callee",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Callee__factory>;
    getContractFactory(
      name: "ArbitratorVault",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ArbitratorVault__factory>;
    getContractFactory(
      name: "MockUSDC",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUSDC__factory>;
    getContractFactory(
      name: "AssetOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AssetOracle__factory>;
    getContractFactory(
      name: "IUniswapPairOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapPairOracle__factory>;
    getContractFactory(
      name: "UniswapPairOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapPairOracle__factory>;
    getContractFactory(
      name: "Owned",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Owned__factory>;
    getContractFactory(
      name: "KUSDBank",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KUSDBank__factory>;
    getContractFactory(
      name: "KUSDPoolLibrary",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KUSDPoolLibrary__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "BaseRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseRewardPool__factory>;
    getContractFactory(
      name: "BasicEKLHolder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BasicEKLHolder__factory>;
    getContractFactory(
      name: "BondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondDepository__factory>;
    getContractFactory(
      name: "BondTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BondTreasury__factory>;
    getContractFactory(
      name: "ClaimSwapBondZap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimSwapBondZap__factory>;
    getContractFactory(
      name: "ClaimSwapKlayKbtLpDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ClaimSwapKlayKbtLpDepository__factory>;
    getContractFactory(
      name: "EKLBondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EKLBondDepository__factory>;
    getContractFactory(
      name: "IBondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondDepository__factory>;
    getContractFactory(
      name: "IBondTreasury",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBondTreasury__factory>;
    getContractFactory(
      name: "IClaimSwapFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimSwapFactory__factory>;
    getContractFactory(
      name: "IClaimSwapPair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimSwapPair__factory>;
    getContractFactory(
      name: "IClaimSwapZap",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IClaimSwapZap__factory>;
    getContractFactory(
      name: "IOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOracle__factory>;
    getContractFactory(
      name: "IStakedToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakedToken__factory>;
    getContractFactory(
      name: "KPUSDTBondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KPUSDTBondDepository__factory>;
    getContractFactory(
      name: "IOwnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwnable__factory>;
    getContractFactory(
      name: "IERC2612Permit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC2612Permit__factory>;
    getContractFactory(
      name: "IKIP7",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP7__factory>;
    getContractFactory(
      name: "IKIP7Detailed",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKIP7Detailed__factory>;
    getContractFactory(
      name: "KIP7",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KIP7__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "USDTUSDCBondDepository",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.USDTUSDCBondDepository__factory>;
    getContractFactory(
      name: "Booster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Booster__factory>;
    getContractFactory(
      name: "BoosterOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BoosterOwner__factory>;
    getContractFactory(
      name: "IOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IOwner__factory>;
    getContractFactory(
      name: "DepositToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DepositToken__factory>;
    getContractFactory(
      name: "EKLDepositor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EKLDepositor__factory>;
    getContractFactory(
      name: "ERC20Custom",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Custom__factory>;
    getContractFactory(
      name: "ExtraRewardStashV1",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExtraRewardStashV1__factory>;
    getContractFactory(
      name: "ExtraRewardStashV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExtraRewardStashV2__factory>;
    getContractFactory(
      name: "ExtraRewardStashV3",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ExtraRewardStashV3__factory>;
    getContractFactory(
      name: "FakeGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FakeGauge__factory>;
    getContractFactory(
      name: "IAssetOracle",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAssetOracle__factory>;
    getContractFactory(
      name: "IBooster",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBooster__factory>;
    getContractFactory(
      name: "IDelegation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDelegation__factory>;
    getContractFactory(
      name: "IEKLDepositor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEKLDepositor__factory>;
    getContractFactory(
      name: "IKPtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKPtoken__factory>;
    getContractFactory(
      name: "IKUSDtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKUSDtoken__factory>;
    getContractFactory(
      name: "ILockedKP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILockedKP__factory>;
    getContractFactory(
      name: "IDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IDeposit__factory>;
    getContractFactory(
      name: "IEKLDeposit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEKLDeposit__factory>;
    getContractFactory(
      name: "IEklipseGauge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEklipseGauge__factory>;
    getContractFactory(
      name: "IEklipseVoteEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IEklipseVoteEscrow__factory>;
    getContractFactory(
      name: "IFeeDistro",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeDistro__factory>;
    getContractFactory(
      name: "IMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMinter__factory>;
    getContractFactory(
      name: "IPools",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPools__factory>;
    getContractFactory(
      name: "IRegistry",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRegistry__factory>;
    getContractFactory(
      name: "IRewardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardFactory__factory>;
    getContractFactory(
      name: "IRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewards__factory>;
    getContractFactory(
      name: "IStaker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStaker__factory>;
    getContractFactory(
      name: "IStash",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStash__factory>;
    getContractFactory(
      name: "IStashFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStashFactory__factory>;
    getContractFactory(
      name: "ITokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenFactory__factory>;
    getContractFactory(
      name: "ITokenMinter",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ITokenMinter__factory>;
    getContractFactory(
      name: "IVestedEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVestedEscrow__factory>;
    getContractFactory(
      name: "IVoting",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVoting__factory>;
    getContractFactory(
      name: "IWalletChecker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWalletChecker__factory>;
    getContractFactory(
      name: "IRewardHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardHook__factory>;
    getContractFactory(
      name: "IRewardStaking",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IRewardStaking__factory>;
    getContractFactory(
      name: "IStakingProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IStakingProxy__factory>;
    getContractFactory(
      name: "IVotingEligibility",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotingEligibility__factory>;
    getContractFactory(
      name: "KpEKLToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KpEKLToken__factory>;
    getContractFactory(
      name: "KPLockerV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KPLockerV2__factory>;
    getContractFactory(
      name: "KpRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KpRewardPool__factory>;
    getContractFactory(
      name: "IKPLocker",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKPLocker__factory>;
    getContractFactory(
      name: "IKPRewards",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IKPRewards__factory>;
    getContractFactory(
      name: "KPStakingProxyV2",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KPStakingProxyV2__factory>;
    getContractFactory(
      name: "KPtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KPtoken__factory>;
    getContractFactory(
      name: "KUSDtoken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.KUSDtoken__factory>;
    getContractFactory(
      name: "RewardFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardFactory__factory>;
    getContractFactory(
      name: "RewardHook",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.RewardHook__factory>;
    getContractFactory(
      name: "StashFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StashFactory__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "IUniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2ERC20__factory>;
    getContractFactory(
      name: "IUniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Factory__factory>;
    getContractFactory(
      name: "IUniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Pair__factory>;
    getContractFactory(
      name: "IUniswapV2Router",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router__factory>;
    getContractFactory(
      name: "IUniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUniswapV2Router02__factory>;
    getContractFactory(
      name: "IWKLAY",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWKLAY__factory>;
    getContractFactory(
      name: "UniswapV2ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2ERC20__factory>;
    getContractFactory(
      name: "UniswapV2Factory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Factory__factory>;
    getContractFactory(
      name: "IMigrator",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IMigrator__factory>;
    getContractFactory(
      name: "UniswapV2Pair",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Pair__factory>;
    getContractFactory(
      name: "UniswapV2Router02",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UniswapV2Router02__factory>;
    getContractFactory(
      name: "WKLAY",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WKLAY__factory>;
    getContractFactory(
      name: "TokenFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TokenFactory__factory>;
    getContractFactory(
      name: "TreasuryFunds",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.TreasuryFunds__factory>;
    getContractFactory(
      name: "VestedEscrow",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VestedEscrow__factory>;
    getContractFactory(
      name: "VirtualBalanceRewardPool",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VirtualBalanceRewardPool__factory>;
    getContractFactory(
      name: "VirtualBalanceWrapper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VirtualBalanceWrapper__factory>;
    getContractFactory(
      name: "VoteDelegateExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VoteDelegateExtension__factory>;
    getContractFactory(
      name: "EklipseVoterProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EklipseVoterProxy__factory>;
    getContractFactory(
      name: "VotingBalance",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingBalance__factory>;
    getContractFactory(
      name: "VotingBalanceMax",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingBalanceMax__factory>;
    getContractFactory(
      name: "VotingBalanceV2Gauges",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingBalanceV2Gauges__factory>;
    getContractFactory(
      name: "VotingEligibility",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotingEligibility__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2Callee",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Callee>;
    getContractAt(
      name: "ArbitratorVault",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ArbitratorVault>;
    getContractAt(
      name: "MockUSDC",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUSDC>;
    getContractAt(
      name: "AssetOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AssetOracle>;
    getContractAt(
      name: "IUniswapPairOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapPairOracle>;
    getContractAt(
      name: "UniswapPairOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapPairOracle>;
    getContractAt(
      name: "Owned",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Owned>;
    getContractAt(
      name: "KUSDBank",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KUSDBank>;
    getContractAt(
      name: "KUSDPoolLibrary",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KUSDPoolLibrary>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "BaseRewardPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseRewardPool>;
    getContractAt(
      name: "BasicEKLHolder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BasicEKLHolder>;
    getContractAt(
      name: "BondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondDepository>;
    getContractAt(
      name: "BondTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BondTreasury>;
    getContractAt(
      name: "ClaimSwapBondZap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimSwapBondZap>;
    getContractAt(
      name: "ClaimSwapKlayKbtLpDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ClaimSwapKlayKbtLpDepository>;
    getContractAt(
      name: "EKLBondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EKLBondDepository>;
    getContractAt(
      name: "IBondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondDepository>;
    getContractAt(
      name: "IBondTreasury",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBondTreasury>;
    getContractAt(
      name: "IClaimSwapFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimSwapFactory>;
    getContractAt(
      name: "IClaimSwapPair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimSwapPair>;
    getContractAt(
      name: "IClaimSwapZap",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IClaimSwapZap>;
    getContractAt(
      name: "IOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOracle>;
    getContractAt(
      name: "IStakedToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakedToken>;
    getContractAt(
      name: "KPUSDTBondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KPUSDTBondDepository>;
    getContractAt(
      name: "IOwnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwnable>;
    getContractAt(
      name: "IERC2612Permit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC2612Permit>;
    getContractAt(
      name: "IKIP7",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP7>;
    getContractAt(
      name: "IKIP7Detailed",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKIP7Detailed>;
    getContractAt(
      name: "KIP7",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KIP7>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "USDTUSDCBondDepository",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.USDTUSDCBondDepository>;
    getContractAt(
      name: "Booster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Booster>;
    getContractAt(
      name: "BoosterOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BoosterOwner>;
    getContractAt(
      name: "IOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IOwner>;
    getContractAt(
      name: "DepositToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.DepositToken>;
    getContractAt(
      name: "EKLDepositor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EKLDepositor>;
    getContractAt(
      name: "ERC20Custom",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Custom>;
    getContractAt(
      name: "ExtraRewardStashV1",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExtraRewardStashV1>;
    getContractAt(
      name: "ExtraRewardStashV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExtraRewardStashV2>;
    getContractAt(
      name: "ExtraRewardStashV3",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ExtraRewardStashV3>;
    getContractAt(
      name: "FakeGauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FakeGauge>;
    getContractAt(
      name: "IAssetOracle",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAssetOracle>;
    getContractAt(
      name: "IBooster",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBooster>;
    getContractAt(
      name: "IDelegation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDelegation>;
    getContractAt(
      name: "IEKLDepositor",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEKLDepositor>;
    getContractAt(
      name: "IKPtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKPtoken>;
    getContractAt(
      name: "IKUSDtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKUSDtoken>;
    getContractAt(
      name: "ILockedKP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ILockedKP>;
    getContractAt(
      name: "IDeposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IDeposit>;
    getContractAt(
      name: "IEKLDeposit",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEKLDeposit>;
    getContractAt(
      name: "IEklipseGauge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEklipseGauge>;
    getContractAt(
      name: "IEklipseVoteEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IEklipseVoteEscrow>;
    getContractAt(
      name: "IFeeDistro",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeDistro>;
    getContractAt(
      name: "IMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMinter>;
    getContractAt(
      name: "IPools",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPools>;
    getContractAt(
      name: "IRegistry",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRegistry>;
    getContractAt(
      name: "IRewardFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardFactory>;
    getContractAt(
      name: "IRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewards>;
    getContractAt(
      name: "IStaker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStaker>;
    getContractAt(
      name: "IStash",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStash>;
    getContractAt(
      name: "IStashFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStashFactory>;
    getContractAt(
      name: "ITokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenFactory>;
    getContractAt(
      name: "ITokenMinter",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ITokenMinter>;
    getContractAt(
      name: "IVestedEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVestedEscrow>;
    getContractAt(
      name: "IVoting",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVoting>;
    getContractAt(
      name: "IWalletChecker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWalletChecker>;
    getContractAt(
      name: "IRewardHook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardHook>;
    getContractAt(
      name: "IRewardStaking",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IRewardStaking>;
    getContractAt(
      name: "IStakingProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IStakingProxy>;
    getContractAt(
      name: "IVotingEligibility",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotingEligibility>;
    getContractAt(
      name: "KpEKLToken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KpEKLToken>;
    getContractAt(
      name: "KPLockerV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KPLockerV2>;
    getContractAt(
      name: "KpRewardPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KpRewardPool>;
    getContractAt(
      name: "IKPLocker",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKPLocker>;
    getContractAt(
      name: "IKPRewards",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IKPRewards>;
    getContractAt(
      name: "KPStakingProxyV2",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KPStakingProxyV2>;
    getContractAt(
      name: "KPtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KPtoken>;
    getContractAt(
      name: "KUSDtoken",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.KUSDtoken>;
    getContractAt(
      name: "RewardFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardFactory>;
    getContractAt(
      name: "RewardHook",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.RewardHook>;
    getContractAt(
      name: "StashFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StashFactory>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "IUniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2ERC20>;
    getContractAt(
      name: "IUniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Factory>;
    getContractAt(
      name: "IUniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Pair>;
    getContractAt(
      name: "IUniswapV2Router",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router>;
    getContractAt(
      name: "IUniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUniswapV2Router02>;
    getContractAt(
      name: "IWKLAY",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWKLAY>;
    getContractAt(
      name: "UniswapV2ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2ERC20>;
    getContractAt(
      name: "UniswapV2Factory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Factory>;
    getContractAt(
      name: "IMigrator",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IMigrator>;
    getContractAt(
      name: "UniswapV2Pair",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Pair>;
    getContractAt(
      name: "UniswapV2Router02",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UniswapV2Router02>;
    getContractAt(
      name: "WKLAY",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WKLAY>;
    getContractAt(
      name: "TokenFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TokenFactory>;
    getContractAt(
      name: "TreasuryFunds",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.TreasuryFunds>;
    getContractAt(
      name: "VestedEscrow",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VestedEscrow>;
    getContractAt(
      name: "VirtualBalanceRewardPool",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VirtualBalanceRewardPool>;
    getContractAt(
      name: "VirtualBalanceWrapper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VirtualBalanceWrapper>;
    getContractAt(
      name: "VoteDelegateExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VoteDelegateExtension>;
    getContractAt(
      name: "EklipseVoterProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.EklipseVoterProxy>;
    getContractAt(
      name: "VotingBalance",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingBalance>;
    getContractAt(
      name: "VotingBalanceMax",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingBalanceMax>;
    getContractAt(
      name: "VotingBalanceV2Gauges",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingBalanceV2Gauges>;
    getContractAt(
      name: "VotingEligibility",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VotingEligibility>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
