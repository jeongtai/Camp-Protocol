/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockUSDC, MockUSDCInterface } from "../MockUSDC";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "TOTAL_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604080518082018252600981527f4d6f636b4552433230000000000000000000000000000000000000000000000060208083019182528351808501909452600484527f4d6f636b0000000000000000000000000000000000000000000000000000000090840152815133939160129161008c91600391610194565b5081516100a0906004906020850190610194565b506005805460ff191660ff9290921691909117905550506001600160a01b03811661012c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015290519081900360640190fd5b60058054610100600160a81b0319166101006001600160a01b038416908102919091179091556040805160008152602081019290925280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a150610235565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826101ca5760008555610210565b82601f106101e357805160ff1916838001178555610210565b82800160010185558215610210579182015b828111156102105782518255916020019190600101906101f5565b5061021c929150610220565b5090565b5b8082111561021c5760008155600101610221565b610f4580620002456000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806370a08231116100b257806395d89b4111610081578063a9059cbb11610066578063a9059cbb14610335578063dd62ed3e14610361578063e30443bc1461038f5761011b565b806395d89b4114610301578063a457c2d7146103095761011b565b806370a08231146102c357806379ba5097146102e95780638da5cb5b146102f1578063902d55a5146102f95761011b565b806323b872dd116100ee57806323b872dd1461021f578063313ce56714610255578063395093511461027357806353a47bb71461029f5761011b565b806306fdde0314610120578063095ea7b31461019d5780631627540c146101dd57806318160ddd14610205575b600080fd5b6101286103bb565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561016257818101518382015260200161014a565b50505050905090810190601f16801561018f5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c9600480360360408110156101b357600080fd5b506001600160a01b038135169060200135610451565b604080519115158252519081900360200190f35b610203600480360360208110156101f357600080fd5b50356001600160a01b0316610467565b005b61020d610516565b60408051918252519081900360200190f35b6101c96004803603606081101561023557600080fd5b506001600160a01b0381358116916020810135909116906040013561051c565b61025d610585565b6040805160ff9092168252519081900360200190f35b6101c96004803603604081101561028957600080fd5b506001600160a01b03813516906020013561058e565b6102a76105c4565b604080516001600160a01b039092168252519081900360200190f35b61020d600480360360208110156102d957600080fd5b50356001600160a01b03166105d3565b6102036105ee565b6102a76106de565b61020d6106f2565b610128610700565b6101c96004803603604081101561031f57600080fd5b506001600160a01b038135169060200135610761565b6101c96004803603604081101561034b57600080fd5b506001600160a01b0381351690602001356107b0565b61020d6004803603604081101561037757600080fd5b506001600160a01b03813581169160200135166107bd565b610203600480360360408110156103a557600080fd5b506001600160a01b0381351690602001356107e8565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045e338484610808565b50600192915050565b60055461010090046001600160a01b031633146104b55760405162461bcd60e51b815260040180806020018281038252602f815260200180610e72602f913960400191505060405180910390fd5b600680546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b60025490565b60006105298484846108f4565b61057b843361057685604051806060016040528060278152602001610ea1602791396001600160a01b038a1660009081526001602090815260408083203384529091529020549190610a4f565b610808565b5060019392505050565b60055460ff1690565b3360008181526001602090815260408083206001600160a01b0387168452909152812054909161045e9185906105769086610ae6565b6006546001600160a01b031681565b6001600160a01b031660009081526020819052604090205490565b6006546001600160a01b031633146106375760405162461bcd60e51b8152600401808060200182810382526035815260200180610db26035913960400191505060405180910390fd5b600554600654604080516101009093046001600160a01b039081168452909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a160068054600580547fffffffffffffffffffffff0000000000000000000000000000000000000000ff166101006001600160a01b0384160217905573ffffffffffffffffffffffffffffffffffffffff19169055565b60055461010090046001600160a01b031681565b69d3c21bcecceda100000081565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104475780601f1061041c57610100808354040283529160200191610447565b600061045e338461057685604051806060016040528060248152602001610e2a602491393360009081526001602090815260408083206001600160a01b038d1684529091529020549190610a4f565b600061045e3384846108f4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6107fa826107f5846105d3565b610b47565b6108048282610c59565b5050565b6001600160a01b03831661084d5760405162461bcd60e51b8152600401808060200182810382526023815260200180610eed6023913960400191505060405180910390fd5b6001600160a01b0382166108925760405162461bcd60e51b8152600401808060200182810382526021815260200180610d916021913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166109395760405162461bcd60e51b8152600401808060200182810382526024815260200180610e4e6024913960400191505060405180910390fd5b6001600160a01b03821661097e5760405162461bcd60e51b8152600401808060200182810382526022815260200180610e086022913960400191505060405180910390fd5b610989838383610d49565b6109c681604051806060016040528060258152602001610ec8602591396001600160a01b0386166000908152602081905260409020549190610a4f565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546109f59082610ae6565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610ade5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610aa3578181015183820152602001610a8b565b50505050905090810190601f168015610ad05780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b40576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610ba2576040805162461bcd60e51b815260206004820181905260248201527f4b4950373a206275726e2066726f6d20746865207a65726f2061646472657373604482015290519081900360640190fd5b610bae82600083610d49565b610beb81604051806060016040528060218152602001610de7602191396001600160a01b0385166000908152602081905260409020549190610a4f565b6001600160a01b038316600090815260208190526040902055600254610c119082610d4e565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6001600160a01b038216610cb4576040805162461bcd60e51b815260206004820152601e60248201527f4b4950373a206d696e7420746f20746865207a65726f20616464726573730000604482015290519081900360640190fd5b610cbf308383610d49565b600254610ccc9082610ae6565b6002556001600160a01b038216600090815260208190526040902054610cf29082610ae6565b6001600160a01b038316600081815260208181526040918290209390935580518481529051919230927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b505050565b6000610b4083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610a4f56fe4b4950373a20617070726f766520746f20746865207a65726f2061646472657373596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e6572736869704b4950373a206275726e20616d6f756e7420657863656564732062616c616e63654b4950373a207472616e7366657220746f20746865207a65726f20616464726573734b4950373a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f4b4950373a207472616e736665722066726f6d20746865207a65726f20616464726573734f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e4b4950373a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e63654b4950373a207472616e7366657220616d6f756e7420657863656564732062616c616e63654b4950373a20617070726f76652066726f6d20746865207a65726f2061646472657373a26469706673582212202354b36bc5b6cd7f93839f072e56f7a0c501500a0bb63c21572749aa03cc34f564736f6c63430007050033";

export class MockUSDC__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockUSDC> {
    return super.deploy(overrides || {}) as Promise<MockUSDC>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockUSDC {
    return super.attach(address) as MockUSDC;
  }
  connect(signer: Signer): MockUSDC__factory {
    return super.connect(signer) as MockUSDC__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockUSDCInterface {
    return new utils.Interface(_abi) as MockUSDCInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockUSDC {
    return new Contract(address, _abi, signerOrProvider) as MockUSDC;
  }
}
