/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  UniswapPairOracle,
  UniswapPairOracleInterface,
} from "../UniswapPairOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "factory",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenB",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner_address",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerNominated",
    type: "event",
  },
  {
    inputs: [],
    name: "ALLOW_STALE_CONSULTS",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CONSULT_LENIENCY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PERIOD",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "blockTimestampLast",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "canUpdate",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256",
      },
    ],
    name: "consult",
    outputs: [
      {
        internalType: "uint256",
        name: "amountOut",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "nominateNewOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "nominatedOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pair",
    outputs: [
      {
        internalType: "contract IUniswapV2Pair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0Average",
    outputs: [
      {
        internalType: "uint224",
        name: "_x",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price0CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1Average",
    outputs: [
      {
        internalType: "uint224",
        name: "_x",
        type: "uint224",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price1CumulativeLast",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_allow_stale_consults",
        type: "bool",
      },
    ],
    name: "setAllowStaleConsults",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_consult_leniency",
        type: "uint256",
      },
    ],
    name: "setConsultLeniency",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_period",
        type: "uint256",
      },
    ],
    name: "setPeriod",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token0",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token1",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052610e1060025560786003556004805460ff191690553480156200002657600080fd5b50604051620016f5380380620016f5833981810160405260808110156200004c57600080fd5b5080516020820151604083015160609093015191929091806001600160a01b038116620000da57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4f776e657220616464726573732063616e6e6f74206265203000000000000000604482015290519081900360640190fd5b600080546001600160a01b0319166001600160a01b038316908117825560408051928352602083019190915280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a15060006200014d858585620004e260201b620009a81760201c565b9050806001600160a01b03166080816001600160a01b031660601b81525050806001600160a01b0316630dfe16816040518163ffffffff1660e01b815260040160206040518083038186803b158015620001a657600080fd5b505afa158015620001bb573d6000803e3d6000fd5b505050506040513d6020811015620001d257600080fd5b505160601b6001600160601b03191660a052604080517fd21220a700000000000000000000000000000000000000000000000000000000815290516001600160a01b0383169163d21220a7916004808301926020929190829003018186803b1580156200023e57600080fd5b505afa15801562000253573d6000803e3d6000fd5b505050506040513d60208110156200026a57600080fd5b505160601b6001600160601b03191660c052604080517f5909c0d500000000000000000000000000000000000000000000000000000000815290516001600160a01b03831691635909c0d5916004808301926020929190829003018186803b158015620002d657600080fd5b505afa158015620002eb573d6000803e3d6000fd5b505050506040513d60208110156200030257600080fd5b5051600555604080517f5a3d549300000000000000000000000000000000000000000000000000000000815290516001600160a01b03831691635a3d5493916004808301926020929190829003018186803b1580156200036157600080fd5b505afa15801562000376573d6000803e3d6000fd5b505050506040513d60208110156200038d57600080fd5b5051600655604080517f0902f1ac000000000000000000000000000000000000000000000000000000008152905160009182916001600160a01b03851691630902f1ac916004808301926060929190829003018186803b158015620003f157600080fd5b505afa15801562000406573d6000803e3d6000fd5b505050506040513d60608110156200041d57600080fd5b50805160208201516040909201516007805463ffffffff191663ffffffff909216919091179055925090506001600160701b038216158015906200046957506001600160701b03811615155b620004d557604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f556e6973776170506169724f7261636c653a204e4f5f52455345525645530000604482015290519081900360640190fd5b50505050505050620006a4565b60008080620004f285856200058d565b91509150856001600160a01b031663e6a4390583836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b1580156200055557600080fd5b505afa1580156200056a573d6000803e3d6000fd5b505050506040513d60208110156200058157600080fd5b50519695505050505050565b600080826001600160a01b0316846001600160a01b03161415620005fd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180620016d06025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b0316106200061f57828462000622565b83835b90925090506001600160a01b0382166200069d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b60805160601c60a05160601c60c05160601c610fe7620006e960003980610537528061092a52508061032252806104b652508061078652806108f45250610fe76000f3fe608060405234801561001057600080fd5b50600436106101775760003560e01c80635e6aaf2c116100d8578063a6bb45391161008c578063c5700a0211610066578063c5700a02146102d8578063d21220a7146102f9578063f1551aea1461030157610177565b8063a6bb4539146102c0578063a8aa1b31146102c8578063b4d1d795146102d057610177565b80638da5cb5b116100bd5780638da5cb5b146102a8578063a17a2685146102b0578063a2e62045146102b857610177565b80635e6aaf2c1461027c57806379ba5097146102a057610177565b80633fcb55ca1161012f5780635909c0d5116101145780635909c0d51461024f5780635a3d5493146102575780635cb9a7141461025f57610177565b80633fcb55ca1461023f57806353a47bb71461024757610177565b80631627540c116101605780631627540c146101bf5780631ac2c825146101e55780633ddac9531461020157610177565b80630dfe16811461017c5780630f3a9f65146101a0575b600080fd5b610184610320565b604080516001600160a01b039092168252519081900360200190f35b6101bd600480360360208110156101b657600080fd5b5035610344565b005b6101bd600480360360208110156101d557600080fd5b50356001600160a01b0316610392565b6101ed61043c565b604080519115158252519081900360200190f35b61022d6004803603604081101561021757600080fd5b506001600160a01b038135169060200135610445565b60408051918252519081900360200190f35b61022d610601565b610184610607565b61022d610616565b61022d61061c565b6101bd6004803603602081101561027557600080fd5b5035610622565b610284610670565b604080516001600160e01b039092168252519081900360200190f35b6101bd61067f565b610184610748565b6101ed610757565b6101bd61077c565b6102846108e3565b6101846108f2565b61022d610916565b6102e061091c565b6040805163ffffffff9092168252519081900360200190f35b610184610928565b6101bd6004803603602081101561031757600080fd5b5035151561094c565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b0316331461038d5760405162461bcd60e51b815260040180806020018281038252602f815260200180610f3b602f913960400191505060405180910390fd5b600255565b6000546001600160a01b031633146103db5760405162461bcd60e51b815260040180806020018281038252602f815260200180610f3b602f913960400191505060405180910390fd5b600180546001600160a01b03831673ffffffffffffffffffffffffffffffffffffffff19909116811790915560408051918252517f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229181900360200190a150565b60045460ff1681565b600080610450610a4f565b60075460035460025492935063ffffffff918216840392019082161080610479575060045460ff165b6104b45760405162461bcd60e51b8152600401808060200182810382526035815260200180610ee16035913960400191505060405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b031614156105355760408051602081019091526008546001600160e01b0316815261051a906105159086610a59565b610ad7565b71ffffffffffffffffffffffffffffffffffff1692506105f9565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316856001600160a01b0316146105bb576040805162461bcd60e51b815260206004820181905260248201527f556e6973776170506169724f7261636c653a20494e56414c49445f544f4b454e604482015290519081900360640190fd5b60408051602081019091526009546001600160e01b031681526105e2906105159086610a59565b71ffffffffffffffffffffffffffffffffffff1692505b505092915050565b60035481565b6001546001600160a01b031681565b60055481565b60065481565b6000546001600160a01b0316331461066b5760405162461bcd60e51b815260040180806020018281038252602f815260200180610f3b602f913960400191505060405180910390fd5b600355565b6009546001600160e01b031681565b6001546001600160a01b031633146106c85760405162461bcd60e51b8152600401808060200182810382526035815260200180610eac6035913960400191505060405180910390fd5b600054600154604080516001600160a01b03938416815292909116602083015280517fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9281900390910190a1600180546000805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b03841617909155169055565b6000546001600160a01b031681565b600080610762610a4f565b60075460025463ffffffff91821690920316101591505090565b60008060006107aa7f0000000000000000000000000000000000000000000000000000000000000000610ade565b600754600254939650919450925063ffffffff90811683039190821610156108035760405162461bcd60e51b8152600401808060200182810382526025815260200180610f6a6025913960400191505060405180910390fd5b60405180602001604052808263ffffffff1660055487038161082157fe5b046001600160e01b039081169091529051600880547fffffffff0000000000000000000000000000000000000000000000000000000016919092161790556040805160208101909152600654819063ffffffff84169086038161088057fe5b046001600160e01b039081169091529051600980547fffffffff000000000000000000000000000000000000000000000000000000001691909216179055506005929092556006556007805463ffffffff191663ffffffff909216919091179055565b6008546001600160e01b031681565b7f000000000000000000000000000000000000000000000000000000000000000081565b60025481565b60075463ffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000546001600160a01b031633146109955760405162461bcd60e51b815260040180806020018281038252602f815260200180610f3b602f913960400191505060405180910390fd5b6004805460ff1916911515919091179055565b60008060006109b78585610cdf565b91509150856001600160a01b031663e6a4390583836040518363ffffffff1660e01b815260040180836001600160a01b03168152602001826001600160a01b031681526020019250505060206040518083038186803b158015610a1957600080fd5b505afa158015610a2d573d6000803e3d6000fd5b505050506040513d6020811015610a4357600080fd5b50519695505050505050565b63ffffffff421690565b610a61610e86565b6000821580610a8757505082516001600160e01b031682810290838281610a8457fe5b04145b610ac25760405162461bcd60e51b8152600401808060200182810382526023815260200180610f8f6023913960400191505060405180910390fd5b60408051602081019091529081529392505050565b5160701c90565b6000806000610aeb610a4f565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015610b2657600080fd5b505afa158015610b3a573d6000803e3d6000fd5b505050506040513d6020811015610b5057600080fd5b5051604080517f5a3d549300000000000000000000000000000000000000000000000000000000815290519194506001600160a01b03861691635a3d549391600480820192602092909190829003018186803b158015610baf57600080fd5b505afa158015610bc3573d6000803e3d6000fd5b505050506040513d6020811015610bd957600080fd5b5051604080517f0902f1ac0000000000000000000000000000000000000000000000000000000081529051919350600091829182916001600160a01b03891691630902f1ac916004808301926060929190829003018186803b158015610c3e57600080fd5b505afa158015610c52573d6000803e3d6000fd5b505050506040513d6060811015610c6857600080fd5b5080516020820151604090920151909450909250905063ffffffff80821690851614610cd55780840363ffffffff8116610ca28486610dbd565b516001600160e01b031602969096019563ffffffff8116610cc38585610dbd565b516001600160e01b0316029590950194505b5050509193909250565b600080826001600160a01b0316846001600160a01b03161415610d335760405162461bcd60e51b8152600401808060200182810382526025815260200180610f166025913960400191505060405180910390fd5b826001600160a01b0316846001600160a01b031610610d53578284610d56565b83835b90925090506001600160a01b038216610db6576040805162461bcd60e51b815260206004820152601e60248201527f556e697377617056324c6962726172793a205a45524f5f414444524553530000604482015290519081900360640190fd5b9250929050565b610dc5610e99565b6000826dffffffffffffffffffffffffffff1611610e2a576040805162461bcd60e51b815260206004820152601760248201527f4669786564506f696e743a204449565f42595f5a45524f000000000000000000604482015290519081900360640190fd5b6040805160208101909152806dffffffffffffffffffffffffffff84167bffffffffffffffffffffffffffff0000000000000000000000000000607087901b1681610e7157fe5b046001600160e01b0316815250905092915050565b6040518060200160405280600081525090565b6040805160208101909152600081529056fe596f75206d757374206265206e6f6d696e61746564206265666f726520796f752063616e20616363657074206f776e657273686970556e6973776170506169724f7261636c653a2050524943455f49535f5354414c455f4e4545445f544f5f43414c4c5f555044415445556e697377617056324c6962726172793a204944454e544943414c5f4144445245535345534f6e6c792074686520636f6e7472616374206f776e6572206d617920706572666f726d207468697320616374696f6e556e6973776170506169724f7261636c653a20504552494f445f4e4f545f454c41505345444669786564506f696e743a204d554c5449504c49434154494f4e5f4f564552464c4f57a264697066735822122012205762df10d834a0cb0a416e23f4aed5140b1edb970bd6b9bf53cda58da45264736f6c63430007050033556e697377617056324c6962726172793a204944454e544943414c5f414444524553534553";

export class UniswapPairOracle__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    factory: string,
    tokenA: string,
    tokenB: string,
    _owner_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<UniswapPairOracle> {
    return super.deploy(
      factory,
      tokenA,
      tokenB,
      _owner_address,
      overrides || {}
    ) as Promise<UniswapPairOracle>;
  }
  getDeployTransaction(
    factory: string,
    tokenA: string,
    tokenB: string,
    _owner_address: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      factory,
      tokenA,
      tokenB,
      _owner_address,
      overrides || {}
    );
  }
  attach(address: string): UniswapPairOracle {
    return super.attach(address) as UniswapPairOracle;
  }
  connect(signer: Signer): UniswapPairOracle__factory {
    return super.connect(signer) as UniswapPairOracle__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapPairOracleInterface {
    return new utils.Interface(_abi) as UniswapPairOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapPairOracle {
    return new Contract(address, _abi, signerOrProvider) as UniswapPairOracle;
  }
}
